def generate_key_matrix(key):

    key = "".join(sorted(set(key), key=lambda x: key.index(x)))
    matrix = []
    alphabet = "ABCDEFGHIKLMNOPQRSTUVWXYZ"  # 'J' is excluded and combined with 'I'
    for char in key:
        if char not in matrix:
            matrix.append(char)
    for char in alphabet:
        if char not in matrix:
            matrix.append(char)
    return [matrix[i * 5:(i + 1) * 5] for i in range(5)]

def preprocess_text(text):
    text = text.upper().replace("J", "I")
    processed_text = ""
    i = 0

    while i < len(text):
        processed_text += text[i]
        if i + 1 < len(text) and text[i] == text[i + 1]:
            processed_text += 'X'
        elif i + 1 < len(text):
            processed_text += text[i + 1]
            i += 1
        i += 1

    if len(processed_text) % 2 != 0:
        processed_text += 'X'

    return processed_text

def find_position(char, matrix):
    for row in range(5):
        for col in range(5):
            if matrix[row][col] == char:
                return row, col
    return None

def playfair_encrypt(plaintext, key):
    matrix = generate_key_matrix(key)
    plaintext = preprocess_text(plaintext)
    ciphertext = ""

    for i in range(0, len(plaintext), 2):
        row1, col1 = find_position(plaintext[i], matrix)
        row2, col2 = find_position(plaintext[i + 1], matrix)

        if row1 == row2:
            ciphertext += matrix[row1][(col1 + 1) % 5]
            ciphertext += matrix[row2][(col2 + 1) % 5]
        elif col1 == col2:
            ciphertext += matrix[(row1 + 1) % 5][col1]
            ciphertext += matrix[(row2 + 1) % 5][col2]
        else:
            ciphertext += matrix[row1][col2]
            ciphertext += matrix[row2][col1]

    return ciphertext

def playfair_decrypt(ciphertext, key):
    matrix = generate_key_matrix(key)
    plaintext = ""

    for i in range(0, len(ciphertext), 2):
        row1, col1 = find_position(ciphertext[i], matrix)
        row2, col2 = find_position(ciphertext[i + 1], matrix)

        if row1 == row2:
            plaintext += matrix[row1][(col1 - 1) % 5]
            plaintext += matrix[row2][(col2 - 1) % 5]
        elif col1 == col2:
            plaintext += matrix[(row1 - 1) % 5][col1]
            plaintext += matrix[(row2 - 1) % 5][col2]
        else:
            plaintext += matrix[row1][col1]
            plaintext += matrix[row2][col2]

    return plaintext

def main():
    key = input("Enter the key: ").replace(" ", "").upper()
    plaintext = input("Enter the plaintext: ").replace(" ", "").upper()

    ciphertext = playfair_encrypt(plaintext, key)
    print("Encrypted message:", ciphertext)

    decrypted_text = playfair_decrypt(ciphertext, key)
    print("Decrypted message:", decrypted_text)

if __name__ == "__main__":
    main()

OUTPUT:

Enter the key: 2
Enter the plaintext: hello all
Encrypted message: IFNVMKFQNV
Decrypted message: HENVLOALNV
